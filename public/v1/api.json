{
  "swagger": "2.0",
  "info": {
    "description": "API for JeJu",
    "version": "1.0.0",
    "title": "Jenius Junior"
  },
  "basePath": "/api",
  "tags": [{
      "name": "registration",
      "description": "Operations for registration"
    },
    {
      "name": "accounts",
      "description": "Operations related to Accounts"
    },
    {
      "name": "allocations",
      "description": "Operations about allocations"
    },
    {
      "name": "transactions",
      "description": "Operations related to transactions"
    },
    {
      "name": "cards",
      "description": "All about cards"
    },
    {
      "name": "auth",
      "description": "Auth operations"
    },
    {
      "name": "points",
      "description": "All about points"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/offers": {
      "get": {
        "tags": [
          "points"
        ],
        "summary": "Get point offers",
        "description": "",
        "operationId": "offers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Offer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Login parameters",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Login"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/cards": {
      "post": {
        "tags": [
          "cards"
        ],
        "summary": "Add Card initial balance",
        "description": "",
        "operationId": "addCard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for adding card",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Card"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Card"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get history of transactions",
        "description": "",
        "operationId": "historyTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "cash_tag",
            "in": "query",
            "description": "Cash Tag to get transactions history",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "from",
            "in": "query",
            "description": "Starting date to get transactions history (DD/MM/YYYY)",
            "required": false,
            "type": "string",
            "default": "01/01/2017"
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date to get transactions history (DD/MM/YYYY)",
            "required": false,
            "type": "string",
            "default": "31/12/2017"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TransactionHistory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Transfer amount from a cash tag to another cash tag",
        "description": "",
        "operationId": "transfer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters of transaction to allocation",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Transaction"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/TransactionHistory"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}/allocations": {
      "post": {
        "tags": [
          "allocations"
        ],
        "summary": "Add allocation to an account",
        "description": "",
        "operationId": "addAllocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters for adding and updating allocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}/allocations/{allocation_id}": {
      "put": {
        "tags": [
          "allocations"
        ],
        "summary": "Edit allocation of an account",
        "description": "",
        "operationId": "editAllocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "allocation_id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters for adding and updating allocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditAllocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server"
          }
        }
      },
      "delete": {
        "tags": [
          "allocations"
        ],
        "summary": "Delete allocation of an account",
        "description": "",
        "operationId": "deleteAllocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "allocation_id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}/allocations/{allocation_id}/transactions": {
      "post": {
        "tags": [
          "allocations"
        ],
        "summary": "Transfer amount to allocation",
        "description": "",
        "operationId": "allocate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "Id for getting an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "allocation_id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters of transaction to allocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocationTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}/allocations/{allocation_id}/withdrawal": {
      "post": {
        "tags": [
          "allocations"
        ],
        "summary": "Transfer amount from allocation to wallet",
        "description": "",
        "operationId": "withdraw",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "Id for getting an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "allocation_id",
            "in": "path",
            "description": "Id of an account",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters of transaction to allocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocationTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}/allocations/transactions": {
      "get": {
        "tags": [
          "allocations"
        ],
        "summary": "Get history of transfers to allocations in an account",
        "description": "",
        "operationId": "getAllocationsHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Account id to get the transactions history",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AllocationHistory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/bycashtag/{cash_tag}/allocations/transactions": {
      "get": {
        "tags": [
          "allocations"
        ],
        "summary": "Get history of transfers to allocations in an account",
        "description": "",
        "operationId": "getAllocationsHistoryByCashTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "cash_tag",
          "in": "path",
          "description": "Account cash tag to get the transactions history",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AllocationHistory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get accounts",
        "description": "",
        "operationId": "getAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "parent_cash_tag",
          "in": "query",
          "description": "Parent cash tag of accounts",
          "required": false,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Account"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/bycard/{cardNo}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get account by card number",
        "description": "",
        "operationId": "getAccountByCard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "cardNo",
          "in": "path",
          "description": "Card number for getting an account",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get account by id",
        "description": "",
        "operationId": "getAccountById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Id for getting an account",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a new registration, used as first step to create a registration session.",
        "description": "",
        "operationId": "createRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating registration.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/CreateRegistration"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/CreateRegistrationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/otp_confirmation": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create an OTP confirmation for a registration.",
        "description": "",
        "operationId": "confirmOTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for OTP confirmation.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/OTPConfirmation"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/OTPConfirmationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/pin": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a registration PIN for a registration.",
        "description": "",
        "operationId": "createPIN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating PIN.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SetPIN"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/SetPINResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/cash_tag": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a cash tag for a registration.",
        "description": "",
        "operationId": "createCashTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating cash tag.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/SetCashTag"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/SetCashTagResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/approval": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Approve a registration.",
        "description": "",
        "operationId": "approveRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for approving a registration.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ApproveRegistration"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "$ref": "#/definitions/ApproveRegistrationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Offer": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "merchant_name": {
          "type": "string"
        },
        "product_name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "point_price": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "cash_tag": {
          "type": "string"
        },
        "pin": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Card": {
      "type": "object",
      "properties": {
        "creator_cash_tag": {
          "type": "string"
        },
        "card_no": {
          "type": "string"
        },
        "initial_balance": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransactionHistory": {
      "type": "object",
      "properties": {
        "source_cash_tag": {
          "type": "string"
        },
        "destination_cash_tag": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_date": {
          "format": "string"
        },
        "raw_transaction_date": {
          "format": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "card_no": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        },
        "allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "balance": {
          "type": "integer",
          "format": "int32"
        },
        "_id": {
          "type": "string"
        },
        "parent_cash_tag": {
          "type": "string"
        }
      }
    },
    "CreateAccount": {
      "type": "object",
      "properties": {
        "card_no": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        }
      }
    },
    "Allocation": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "target_balance": {
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "type": "integer",
          "format": "int32"
        },
        "start_date": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        }
      }
    },
    "AddAllocation": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "initial_balance": {
          "type": "integer",
          "format": "int32"
        },
        "target_balance": {
          "type": "integer",
          "format": "int32"
        },
        "due_date": {
          "type": "string"
        }
      }
    },
    "EditAllocation": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "target_balance": {
          "type": "integer",
          "format": "int32"
        },
        "due_date": {
          "type": "string"
        }
      }
    },
    "AllocationHistory": {
      "type": "object",
      "properties": {
        "allocation_title": {
          "type": "string"
        },
        "allocation_id": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_date": {
          "type": "string"
        },
        "raw_transaction_date": {
          "type": "string"
        }
      }
    },
    "AllocationTransaction": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AllocationCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CreateRegistration": {
      "type": "object",
      "properties": {
        "card_no": {
          "type": "string"
        }
      }
    },
    "OTPConfirmation": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "otp": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SetPIN": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "pin": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SetCashTag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        }
      }
    },
    "ApproveRegistration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "CreateRegistrationResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "OTPConfirmationResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "otp_confirmed": {
          "type": "boolean"
        }
      }
    },
    "SetPINResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "pin_set": {
          "type": "boolean"
        }
      }
    },
    "SetCashTagResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "cash_tag_set": {
          "type": "boolean"
        }
      }
    },
    "ApproveRegistrationResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        },
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    }
  }
}