{
  "swagger": "2.0",
  "info": {
    "description": "API for JeJu",
    "version": "1.0.0",
    "title": "Jenius Junior"
  },
  "basePath": "/api",
  "tags": [{
      "name": "registration",
      "description": "Operations for registration"
    },
    {
      "name": "accounts",
      "description": "[WIP] Operations related to Accounts"
    },
    {
      "name": "users",
      "description": "Operations about users (this is only an example)"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/registration": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a new registration, used as first step to create a registration session.",
        "description": "",
        "operationId": "createRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating registration.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Registration1"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RegistrationResponse1"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/otp_confirmation": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create an OTP confirmation for a registration.",
        "description": "",
        "operationId": "confirmOTP",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for OTP confirmation.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Registration2"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RegistrationResponse2"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/pin": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a registration PIN for a registration.",
        "description": "",
        "operationId": "createPIN",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating PIN.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Registration3"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RegistrationResponse3"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/cash_tag": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Create a cash tag for a registration.",
        "description": "",
        "operationId": "createCashTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for creating cash tag.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Registration4"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RegistrationResponse4"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/registration/approval": {
      "post": {
        "tags": [
          "registration"
        ],
        "summary": "Approve a registration.",
        "description": "",
        "operationId": "approveRegistration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Parameters for approving a registration.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/ApproveRegistration"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RegistrationResponse5"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List all users",
        "description": "",
        "operationId": "getUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "d": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "Created user object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by id",
        "description": "",
        "operationId": "getUserById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The id of user to fetch",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "id",
            "in": "path",
            "description": "The id of user to fetch",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "",
        "operationId": "deleteUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The id of user to fetch",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "card_no": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        },
        "allocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Allocation"
          }
        },
        "balance": {
          "type": "integer",
          "format": "int32"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "Allocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "target_balance": {
          "type": "integer",
          "format": "int32"
        },
        "balance": {
          "type": "integer",
          "format": "int32"
        },
        "start_date": {
          "type": "string"
        },
        "due_date": {
          "type": "string"
        }
      }
    },
    "Registration1": {
      "type": "object",
      "properties": {
        "card_no": {
          "type": "string"
        }
      }
    },
    "Registration2": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "otp": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Registration3": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "pin": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Registration4": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        }
      }
    },
    "ApproveRegistration": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "RegistrationResponse1": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "RegistrationResponse2": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "otp_confirmed": {
          "type": "boolean"
        }
      }
    },
    "RegistrationResponse3": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "pin_set": {
          "type": "boolean"
        }
      }
    },
    "RegistrationResponse4": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "cash_tag_set": {
          "type": "boolean"
        }
      }
    },
    "RegistrationResponse5": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "approved": {
          "type": "boolean"
        },
        "account": {
          "$ref": "#/definitions/Account"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        },
        "cash_tag": {
          "type": "string"
        }
      }
    }
  }
}